
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map.Entry;
import java.util.StringTokenizer;

public class Main {
	static HashMap<Integer,Integer> order;
	static HashMap<Integer,Integer> map;
	static List<HashMap<Integer, Integer>> list = new ArrayList<HashMap<Integer, Integer>>();

	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); 
		//int n = Integer.parseInt(br.readLine());
		StringTokenizer st = new StringTokenizer(br.readLine());
		int N = Integer.parseInt(st.nextToken());
		int c = Integer.parseInt(st.nextToken());
		st = new StringTokenizer(br.readLine());
		map = new HashMap<Integer,Integer>();
		order = new HashMap<Integer,Integer>();
	
		int keyOrder =1;
		while(st.hasMoreTokens()) {
		
			int key = Integer.parseInt(st.nextToken());
			
			if(map.containsKey(key)) {
				map.put(key, map.get(key)+1);
			}else {
				map.put(key,1);
				order.put(key, keyOrder++);
			}
		}
		
		List<HashMap.Entry<Integer, Integer>> entryList = new LinkedList<>(map.entrySet());
		entryList.sort(new Comparator<HashMap.Entry<Integer,Integer>>(){
			@Override
			public int compare(HashMap.Entry<Integer, Integer> o1,HashMap.Entry<Integer, Integer> o2) {
				if(o2.getValue()>o1.getValue()) {
					return 1;
				}else if(o2.getValue()<o1.getValue()) {
					return -1;
				}
				else {
					if(order.get(o1.getKey())>order.get(o2.getKey())) {
						return 1;
					}
					else return -1;
				}
				
				
			}
		});
		

		for(Entry<Integer, Integer> l : entryList) {
			for(int i=0;i<l.getValue();i++) {
				System.out.print(l.getKey()+" ");
			}
		}
		
		
	}

	
	
	

}
